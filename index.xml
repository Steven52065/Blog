<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ling的博客</title>
    <link>https://blog.lty520.ml/</link>
    <description>Recent content on Ling的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 25 Jan 2023 15:17:09 +0800</lastBuildDate>
    
        <atom:link href="https://blog.lty520.ml/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>全平台统一输入法——Rime</title>
        <link>https://blog.lty520.ml/%E5%8D%9A%E6%96%87/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%BB%9F%E4%B8%80%E8%BE%93%E5%85%A5%E6%B3%95rime/</link>
        <pubDate>Wed, 25 Jan 2023 15:17:09 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/%E5%8D%9A%E6%96%87/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%BB%9F%E4%B8%80%E8%BE%93%E5%85%A5%E6%B3%95rime/</guid>
        <description>Ling的博客 https://blog.lty520.ml/%E5%8D%9A%E6%96%87/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%BB%9F%E4%B8%80%E8%BE%93%E5%85%A5%E6%B3%95rime/ -&lt;h1 id=&#34;输入法的使用历程&#34;&gt;输入法的使用历程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;PC 安卓使用原版搜狗输入法，ios 使用原装输入法
&lt;ul&gt;
&lt;li&gt;习惯驱使&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PC 使用禁止联网的搜狗输入法
&lt;ul&gt;
&lt;li&gt;考虑到隐私问题及不断爆出的输入法上传用户打字内容的新闻&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安卓使用 Gboard
&lt;ul&gt;
&lt;li&gt;隐私问题及换用了 Pixel 手机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PC 使用 Win11 自带输入法
&lt;ul&gt;
&lt;li&gt;换电脑，找不到禁止联网的搜狗输入法的安装包了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;决定全平台使用 Rime
&lt;ul&gt;
&lt;li&gt;希望去除输入法的隐私暴露问题和解决多平台输入法的词库统一问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;全平台-rime-的调教过程&#34;&gt;全平台 Rime 的调教过程&lt;/h1&gt;
&lt;h2 id=&#34;基本配置&#34;&gt;基本配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;a href=&#34;https://github.com/SivanLaai/rime-pure&#34;&gt;SivanLaai/rime-pure 【rime 小狼毫\trime 同文】手机/PC一站式配置【简约皮肤\拼音搜狗词库\原创trime同文 四叶草九宫格拼音\四叶草拼音\小鹤双拼\极品五笔\QQ五笔\徐码\郑码】&lt;/a&gt; 的配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;a href=&#34;https://github.com/studyzy/imewlconverter&#34;&gt;studyzy/imewlconverter 深蓝词库转换&lt;/a&gt; 将搜狗输入法的细胞词库转换为 Rime 支持的词库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加的词库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pinyin.sogou.com/dict/detail/index/4&#34;&gt;网络流行新词【官方推荐】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pinyin.sogou.com/dict/detail/index/11314&#34;&gt;全国县及县以上行政区划地名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pinyin.sogou.com/dict/detail/index/75228&#34;&gt;开发大神专用词库【官方推荐】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;strong&gt;坚果云&lt;/strong&gt;同步多个平台的个人词典&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;win&#34;&gt;Win&lt;/h2&gt;
&lt;h3 id=&#34;添加拆字词库&#34;&gt;添加拆字词库&lt;/h3&gt;
&lt;h4 id=&#34;思路&#34;&gt;思路&lt;/h4&gt;
&lt;p&gt;由于长期使用搜狗输入法，习惯了拆字输入一些不认识的字(如: henian = 稔；huohuohuo = 焱)&lt;br&gt;
参考文章&lt;a href=&#34;http://gerry.lamost.org/blog/?p=296003&#34;&gt;rime拆字词库&lt;/a&gt; 给 Rime 添加了 拆字词库后也出现了评论区里提到的卡顿问题，使用体验不是很好&lt;br&gt;
参考 Issue &lt;a href=&#34;https://github.com/rime/home/issues/762&#34;&gt;rime导入拆字词库后在输入拼音中包含u的词语的时候会卡一下才弹出候选词列表&lt;/a&gt; 决定尝试用拆字词库替换原装的五笔反查词库&lt;/p&gt;
&lt;h4 id=&#34;过程&#34;&gt;过程&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;使用脚本将拆字词库的 &amp;lsquo;u&amp;rsquo; 去掉&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;with open(&amp;#39;chaizi.dict.yaml&amp;#39;,&amp;#39;a&amp;#39;,encoding=&amp;#39;UTF-8&amp;#39;) as ff:
    for line in open(&amp;#39;luna_pinyin_simp.chaizi.dict.yaml&amp;#39;,&amp;#39;r&amp;#39;,encoding=&amp;#39;UTF-8&amp;#39;):
        a = line.replace(&amp;#39;	u&amp;#39;,&amp;#39;	&amp;#39;)
        ff.write(a)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意：其格式爲以製表符分隔的值（TSV），每行定義一條「文字－編碼」的對應關係（不是空格！！！）&lt;/strong&gt; &lt;em&gt;复制自&lt;a href=&#34;https://github.com/rime/home/wiki/RimeWithSchemata#%E7%A2%BC%E8%A1%A8%E8%88%87%E8%A9%9E%E5%85%B8&#34;&gt;RimeWithSchemata&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;luna_pinyin_simp.chaizi.dict.yaml 来自&lt;a href=&#34;http://gerry.lamost.org/blog/?p=296003&#34;&gt;rime拆字词库&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
2. 使用处理后得到的 chaizi.dict.yaml 内容替换 Rime 安装目录 \weasel-0.14.3\data\stroke.dict.yaml 的内容&lt;br&gt;
3. 将 RimeData\clover.schema.yaml 的 reverse_lookup 字段替换为&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;reverse_lookup:
  dictionary: stroke
  enable_completion: false
  prefix: &amp;#34;`&amp;#34;
  suffix: &amp;#34;&amp;#39;&amp;#34;
  tips: 〔拆字〕
  # preedit_format:
  #   - xlit/hspnz/一丨丿丶乙/
  # comment_format:
  #   - xform/([nl])v/$1ü/
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;重新部署&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;多平台个人词库的同步&#34;&gt;多平台个人词库的同步&lt;/h1&gt;
&lt;h2 id=&#34;思路-1&#34;&gt;思路&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;将 Android 、 ios 的个人词库上传到 PC
&lt;ul&gt;
&lt;li&gt;将 PC 的同步文件夹（默认为RimeData\sync\设备ID）同步到坚果云&lt;/li&gt;
&lt;li&gt;Android 使用 FolderSync 手动上传 同步文件夹&lt;/li&gt;
&lt;li&gt;ios 使用&lt;strong&gt;电脑快传&lt;/strong&gt;功能，将 iPad/sync/设备ID 上传到电脑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PC 将各个平台的个人词库混合
&lt;ul&gt;
&lt;li&gt;使用 Rime 的&lt;strong&gt;用户资料同步&lt;/strong&gt;功能即可&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android 、 ios 分别拉取 PC 的个人词库
&lt;ul&gt;
&lt;li&gt;Android 使用 FolderSync 将坚果云上的 PC 同步文件 同步到本地&lt;/li&gt;
&lt;li&gt;ios 使用&lt;strong&gt;电脑快传&lt;/strong&gt;功能 将 PC 上的 PC 同步文件 同步到本地&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Android 、 ios 分别同步个人资料&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;参考文章&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rime/home/wiki&#34;&gt;rime/home/wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gerry.lamost.org/blog/?p=296003&#34;&gt;rime拆字词库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rime/home/issues/762&#34;&gt;rime导入拆字词库后在输入拼音中包含u的词语的时候会卡一下才弹出候选词列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/471412208&#34;&gt;Rime输入法词库扩充（搜狗词库，QQ拼音词库，清华词库，拆字词库……）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.lty520.ml/%E5%8D%9A%E6%96%87/%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%BB%9F%E4%B8%80%E8%BE%93%E5%85%A5%E6%B3%95rime/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF [第一章web入门]粗心的小李</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E7%AC%AC%E4%B8%80%E7%AB%A0web%E5%85%A5%E9%97%A8%E7%B2%97%E5%BF%83%E7%9A%84%E5%B0%8F%E6%9D%8E/</link>
        <pubDate>Tue, 17 Jan 2023 01:41:38 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E7%AC%AC%E4%B8%80%E7%AB%A0web%E5%85%A5%E9%97%A8%E7%B2%97%E5%BF%83%E7%9A%84%E5%B0%8F%E6%9D%8E/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E7%AC%AC%E4%B8%80%E7%AB%A0web%E5%85%A5%E9%97%A8%E7%B2%97%E5%BF%83%E7%9A%84%E5%B0%8F%E6%9D%8E/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%5B%E7%AC%AC%E4%B8%80%E7%AB%A0%20web%E5%85%A5%E9%97%A8%5D%E7%B2%97%E5%BF%83%E7%9A%84%E5%B0%8F%E6%9D%8E&#34;&gt;https://buuoj.cn/challenges#[%E7%AC%AC%E4%B8%80%E7%AB%A0%20web%E5%85%A5%E9%97%A8]%E7%B2%97%E5%BF%83%E7%9A%84%E5%B0%8F%E6%9D%8E&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;看看能不能找到信息吧？
Git测试
Hello, CTFer!
当前大量开发人员使用 git 进行版本控制，对站点自动部署。如果配置不当，可能会将 .git 文件夹直接部署到线上环境。这就引起了git泄露漏洞。&lt;/p&gt;
&lt;p&gt;小李好像不是很小心，经过了几次迭代更新就直接就把整个文件夹放到线上环境了:(&lt;/p&gt;
&lt;p&gt;very easy&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;提到了将 .git 文件上传到线上，并且可以找到 /.git/config 文件，由此可以确定 .git 文件夹的相对路径———和 index.html 在同一目录下。
使用工具 &lt;a href=&#34;https://github.com/lijiejie/GitHack&#34;&gt;GitHack&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python .\GitHack.py http://9bfa9908-0a98-4587-8547-08565c9261d1.node4.buuoj.cn:81/.git/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可得到一个 index.html 文件，打开即可得 flag &lt;strong&gt;n1book{git_looks_s0_easyfun}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E7%AC%AC%E4%B8%80%E7%AB%A0web%E5%85%A5%E9%97%A8%E7%B2%97%E5%BF%83%E7%9A%84%E5%B0%8F%E6%9D%8E/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 面具下的flag</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag/</link>
        <pubDate>Mon, 16 Jan 2023 23:21:11 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag&#34;&gt;https://buuoj.cn/challenges#%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag/mianju.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;首先将文件用 binwalk 分解,可以分解出一个压缩包，通过伪加密的方式可以解开，解开后得到名为 &lt;strong&gt;flag.vmdk&lt;/strong&gt; 的文件&lt;br&gt;
在 kali 下使用 &lt;strong&gt;7z x 文件路径&lt;/strong&gt; 可以解出&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;├── $RECYCLE.BIN
│   └── S-1-5-21-2200156829-3544857562-508093875-1001
│       └── desktop.ini
├── key_part_one
│   └── NUL
├── key_part_two
│   ├── where_is_flag_part_two.txt
│   └── where_is_flag_part_two.txt:flag_part_two_is_here.txt
└── [SYSTEM]
    ├── $AttrDef
    ├── $BadClus
    ├── $Bitmap
    ├── $Boot
    ├── $Extend
    │   ├── $ObjId
    │   ├── $Quota
    │   ├── $Reparse
    │   └── $RmMetadata
    │       ├── $Repair
    │       ├── $Repair:$Config
    │       ├── $Txf
    │       └── $TxfLog
    │           ├── $Tops
    │           ├── $Tops:$T
    │           └── $TxfLog.blf
    ├── $LogFile
    ├── $MFT
    ├── $MFTMirr
    ├── $Secure
    ├── $Secure:$SDS
    ├── $UpCase
    └── $Volume
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 &lt;strong&gt;NUL&lt;/strong&gt; 文件和 &lt;strong&gt;where_is_flag_part_two.txt:flag_part_two_is_here.txt&lt;/strong&gt; 里可以分别找到两段代码，使用工具 &lt;a href=&#34;https://www.splitbrain.org/services/ook&#34;&gt;Brainfuck/Ook! Obfuscation/Encoding&lt;/a&gt; 可以解出前后两半flag，拼在一起即可得 flag 为 &lt;strong&gt;flag{N7F5_AD5_i5_funny!}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E9%9D%A2%E5%85%B7%E4%B8%8B%E7%9A%84flag/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 另外一个世界</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E4%B8%96%E7%95%8C/</link>
        <pubDate>Mon, 16 Jan 2023 22:36:08 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E4%B8%96%E7%95%8C/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E4%B8%96%E7%95%8C/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E4%B8%96%E7%95%8C&#34;&gt;https://buuoj.cn/challenges#%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E4%B8%96%E7%95%8C&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E4%B8%96%E7%95%8C/monster.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;使用 Notepad++ 打开图片后即可在末尾找到一串特立独行的 &lt;strong&gt;01101011011011110110010101101011011010100011001101110011&lt;/strong&gt;  使用工具 &lt;a href=&#34;http://xiaoniutxt.com/binaryToString.html&#34;&gt;二进制与字符串互转&lt;/a&gt; 即可得到 &lt;strong&gt;koekj3s&lt;/strong&gt;&lt;br&gt;
可得 flag 为 &lt;strong&gt;flag{97314e7864a8f62627b26f3f998c37f1}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E4%B8%96%E7%95%8C/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 乌镇峰会种图</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE/</link>
        <pubDate>Sun, 15 Jan 2023 01:23:24 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE&#34;&gt;https://buuoj.cn/challenges#%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE/img1.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;使用 Notepad++ 打开图片后即可在末尾找到 flag &lt;strong&gt;flag{97314e7864a8f62627b26f3f998c37f1}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;又是用 binwalk，又是用 stegsolve，结果这么简单&amp;hellip;&lt;/em&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E4%B9%8C%E9%95%87%E5%B3%B0%E4%BC%9A%E7%A7%8D%E5%9B%BE/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 信息化时代的步伐</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90/</link>
        <pubDate>Sat, 14 Jan 2023 22:05:38 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90&#34;&gt;https://buuoj.cn/challenges#%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;也许中国可以早早进入信息化时代，但是被清政府拒绝了。附件中是数十年后一位伟人说的话的密文。请翻译出明文(答案为一串中文！) 注意：得到的 flag 请包上 flag{} 提交&lt;br&gt;
606046152623600817831216121621196386&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;h2 id=&#34;相关知识&#34;&gt;相关知识&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E4%B8%AD%E6%96%87%E7%94%B5%E7%A0%81/2667759?fr=aladdin&#34;&gt;中文电码&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;中文电码，又称标准中文电码、中文商用电码、中文电报码或中文电报明码，原本是于电报之中传送中文信息的方法。它是第一个把汉字化作电子讯号的编码表。
中文电码表采用了四位阿拉伯数字作代号，从0001到9999按四位数顺序排列，用四位数字表示最多一万个汉字、字母和符号。汉字先按部首，后按笔划排列。字母和符号放到电码表的最尾。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;所以使用工具 &lt;a href=&#34;https://www.qqxiuzi.cn/bianma/dianbao.php&#34;&gt;电报码在线翻译&lt;/a&gt; 很容易可以将 &lt;strong&gt;606046152623600817831216121621196386&lt;/strong&gt; 翻译为&lt;strong&gt;计算机要从娃娃抓起&lt;/strong&gt;&lt;br&gt;
即可得 flag &lt;strong&gt;flag{计算机要从娃娃抓起}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E4%BF%A1%E6%81%AF%E5%8C%96%E6%97%B6%E4%BB%A3%E7%9A%84%E6%AD%A5%E4%BC%90/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF RSA</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-rsa/</link>
        <pubDate>Sat, 14 Jan 2023 21:56:08 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-rsa/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-rsa/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#RSA&#34;&gt;https://buuoj.cn/challenges#RSA&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;在一次RSA密钥对生成中，假设p=473398607161，q=4511491，e=17
求解出d作为flga提交&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;给 python3 环境安装上 libnum 包，然后运行脚本即可&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import libnum
p = 473398607161
q = 4511491
e = 17
phi = (p-1)*(q-1)
d = libnum.invmod(e,phi)
print(d)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可得 d 为 125631357777427553&lt;br&gt;
即 flag 为 &lt;strong&gt;flag{125631357777427553}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;脚本来源 &lt;a href=&#34;https://www.freebuf.com/articles/web/287854.html&#34;&gt;『CTF』史上最全 RSA 题目总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-rsa/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF Zip伪加密</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/</link>
        <pubDate>Sat, 14 Jan 2023 01:52:14 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/ -&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;注意：得到的 flag 请包上 flag{} 提交  以及一个解压需要密码的 zip 压缩包&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;既然题目叫&lt;strong&gt;Zip伪加密&lt;/strong&gt;,那么就从&lt;strong&gt;Zip伪加密&lt;/strong&gt;入手（废话文学.jpg）&lt;/p&gt;
&lt;h2 id=&#34;相关知识&#34;&gt;相关知识&lt;/h2&gt;
&lt;p&gt;zip文件头协议(部分)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;压缩源文件数据区：
50 4B 03 04：这是头文件标记（0x04034b50）
14 00：解压文件所需 pkware 版本
00 00：全局方式位标记（有无加密）
08 00：压缩方式
5A 7E：最后修改文件时间
F7 46：最后修改文件日期
16 B5 80 14：CRC-32校验（1480B516）
19 00 00 00：压缩后尺寸（25）
17 00 00 00：未压缩尺寸（23）
07 00：文件名长度
00 00：扩展记录长度

压缩源文件目录区：
50 4B 01 02：目录中文件文件头标记(0x02014b50)
3F 00：压缩使用的 pkware 版本
14 00：解压文件所需 pkware 版本
00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）
08 00：压缩方式
5A 7E：最后修改文件时间
F7 46：最后修改文件日期
16 B5 80 14：CRC-32校验（1480B516）
19 00 00 00：压缩后尺寸（25）
17 00 00 00：未压缩尺寸（23）
07 00：文件名长度
24 00：扩展字段长度
00 00：文件注释长度
00 00：磁盘开始号
00 00：内部文件属性
20 00 00 00：外部文件属性
00 00 00 00：局部头部偏移量

压缩源文件目录结束标志：
50 4B 05 06：目录结束标记
00 00：当前磁盘编号
00 00：目录区开始磁盘编号
01 00：本磁盘上纪录总数
01 00：目录区中纪录总数
59 00 00 00：目录区尺寸大小
3E 00 00 00：目录区对第一张磁盘的偏移量
00 00：ZIP 文件注释长度
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如上所述，只要将第二个50 4B后的09 00改为00 00即可&lt;br&gt;
解压得到 flag &lt;strong&gt;flag{Adm1N-B2G-kU-SZIP}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;zip文件头协议部分 引自&lt;a href=&#34;https://blog.csdn.net/ETF6996/article/details/51946250&#34;&gt;zip伪加密&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 隐藏的钥匙</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/</link>
        <pubDate>Sat, 14 Jan 2023 01:44:31 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/ -&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99.jpg&#34; alt=&#34;隐藏的钥匙&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;使用 Notepad++ 打开后搜索 &lt;strong&gt;flag&lt;/strong&gt; 即可找到被 Base64 编码后的信息 &lt;strong&gt;flag:base64:(Mzc3Y2JhZGRhMWVjYTJmMmY3M2QzNjI3Nzc4MWYwMGE=)&lt;/strong&gt;&lt;br&gt;
使用 Base64 解码后即可得到 flag &lt;strong&gt;flag{377cbadda1eca2f2f73d36277781f00a}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 大白</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/</link>
        <pubDate>Sat, 14 Jan 2023 01:09:55 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E5%A4%A7%E7%99%BD&#34;&gt;https://buuoj.cn/challenges#%E5%A4%A7%E7%99%BD&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;看不到图？ 是不是屏幕太小了 注意：得到的 flag 请包上 flag{} 提交&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;题目中提到了&lt;strong&gt;看不到图&lt;/strong&gt;以及&lt;strong&gt;屏幕太小了&lt;/strong&gt;,再加上题目给了一张 png 图片，由此可以猜到这题修改了图片的长或宽，让设备只能显示图片的一部分，从而隐藏了 flag&lt;br&gt;
使用脚本&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import zlib
import struct

filename = &amp;#39;2.png&amp;#39;
with open(filename, &amp;#39;rb&amp;#39;) as f:
    all_b = f.read()
    crc32key = int(all_b[29:33].hex(), 16)
    data = bytearray(all_b[12:29])
    n = 4095  # 理论上0xffffffff,但考虑到屏幕实际/cpu，0x0fff就差不多了
    for w in range(n):  # 高和宽一起爆破
        width = bytearray(struct.pack(&amp;#39;&amp;gt;i&amp;#39;, w))  # q为8字节，i为4字节，h为2字节
        for h in range(n):
            height = bytearray(struct.pack(&amp;#39;&amp;gt;i&amp;#39;, h))
            for x in range(4):
                data[x + 4] = width[x]
                data[x + 8] = height[x]
            crc32result = zlib.crc32(data)
            if crc32result == crc32key:
                # 2021.7.20，有时候显示的宽高依然看不出具体的值，干脆输出data部分
                print(data.hex())
                print(&amp;#34;宽为：&amp;#34;, end=&amp;#34;&amp;#34;)
                print(width)
                print(&amp;#34;高为：&amp;#34;, end=&amp;#34;&amp;#34;)
                print(height)
                exit(0)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以一键得出图片正确的长和宽，将图片信息修改为正确的长和宽即可看到 flag&lt;br&gt;
&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%E5%A4%A7%E7%99%BD1/img1.png&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt;
&lt;p&gt;可得 flag 为 &lt;strong&gt;flag{He1l0_d4_ba1}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;之前用的脚本咋找不到了呢&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;脚本来源 &lt;a href=&#34;https://www.cnblogs.com/yunqian2017/p/14449346.html&#34;&gt;png图片CRC爆破原理的学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/ - </description>
        </item>
    
    
  </channel>
</rss> 