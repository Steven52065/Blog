<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ling的博客</title>
    <link>https://blog.lty520.ml/</link>
    <description>Recent content on Ling的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 02 Feb 2023 01:33:23 +0800</lastBuildDate>
    
        <atom:link href="https://blog.lty520.ml/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>WP BUUCTF RSA</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-rsa/</link>
        <pubDate>Sat, 14 Jan 2023 21:56:08 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-rsa/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-rsa/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#RSA&#34;&gt;https://buuoj.cn/challenges#RSA&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;在一次RSA密钥对生成中，假设p=473398607161，q=4511491，e=17
求解出d作为flga提交&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;给 python3 环境安装上 libnum 包，然后运行脚本即可&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import libnum
p = 473398607161
q = 4511491
e = 17
phi = (p-1)*(q-1)
d = libnum.invmod(e,phi)
print(d)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可得 d 为 125631357777427553&lt;br&gt;
即 flag 为 &lt;strong&gt;flag{125631357777427553}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;脚本来源 &lt;a href=&#34;https://www.freebuf.com/articles/web/287854.html&#34;&gt;『CTF』史上最全 RSA 题目总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-rsa/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF Zip伪加密</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/</link>
        <pubDate>Sat, 14 Jan 2023 01:52:14 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/ -&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;注意：得到的 flag 请包上 flag{} 提交  以及一个解压需要密码的 zip 压缩包&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;既然题目叫&lt;strong&gt;Zip伪加密&lt;/strong&gt;,那么就从&lt;strong&gt;Zip伪加密&lt;/strong&gt;入手（废话文学.jpg）&lt;/p&gt;
&lt;h2 id=&#34;相关知识&#34;&gt;相关知识&lt;/h2&gt;
&lt;p&gt;zip文件头协议(部分)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;压缩源文件数据区：
50 4B 03 04：这是头文件标记（0x04034b50）
14 00：解压文件所需 pkware 版本
00 00：全局方式位标记（有无加密）
08 00：压缩方式
5A 7E：最后修改文件时间
F7 46：最后修改文件日期
16 B5 80 14：CRC-32校验（1480B516）
19 00 00 00：压缩后尺寸（25）
17 00 00 00：未压缩尺寸（23）
07 00：文件名长度
00 00：扩展记录长度

压缩源文件目录区：
50 4B 01 02：目录中文件文件头标记(0x02014b50)
3F 00：压缩使用的 pkware 版本
14 00：解压文件所需 pkware 版本
00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）
08 00：压缩方式
5A 7E：最后修改文件时间
F7 46：最后修改文件日期
16 B5 80 14：CRC-32校验（1480B516）
19 00 00 00：压缩后尺寸（25）
17 00 00 00：未压缩尺寸（23）
07 00：文件名长度
24 00：扩展字段长度
00 00：文件注释长度
00 00：磁盘开始号
00 00：内部文件属性
20 00 00 00：外部文件属性
00 00 00 00：局部头部偏移量

压缩源文件目录结束标志：
50 4B 05 06：目录结束标记
00 00：当前磁盘编号
00 00：目录区开始磁盘编号
01 00：本磁盘上纪录总数
01 00：目录区中纪录总数
59 00 00 00：目录区尺寸大小
3E 00 00 00：目录区对第一张磁盘的偏移量
00 00：ZIP 文件注释长度
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如上所述，只要将第二个50 4B后的09 00改为00 00即可&lt;br&gt;
解压得到 flag &lt;strong&gt;flag{Adm1N-B2G-kU-SZIP}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;zip文件头协议部分 引自&lt;a href=&#34;https://blog.csdn.net/ETF6996/article/details/51946250&#34;&gt;zip伪加密&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-zip%E4%BC%AA%E5%8A%A0%E5%AF%86/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 隐藏的钥匙</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/</link>
        <pubDate>Sat, 14 Jan 2023 01:44:31 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/ -&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99.jpg&#34; alt=&#34;隐藏的钥匙&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;使用 Notepad++ 打开后搜索 &lt;strong&gt;flag&lt;/strong&gt; 即可找到被 Base64 编码后的信息 &lt;strong&gt;flag:base64:(Mzc3Y2JhZGRhMWVjYTJmMmY3M2QzNjI3Nzc4MWYwMGE=)&lt;/strong&gt;&lt;br&gt;
使用 Base64 解码后即可得到 flag &lt;strong&gt;flag{377cbadda1eca2f2f73d36277781f00a}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E9%9A%90%E8%97%8F%E7%9A%84%E9%92%A5%E5%8C%99/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 大白</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/</link>
        <pubDate>Sat, 14 Jan 2023 01:09:55 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E5%A4%A7%E7%99%BD&#34;&gt;https://buuoj.cn/challenges#%E5%A4%A7%E7%99%BD&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;看不到图？ 是不是屏幕太小了 注意：得到的 flag 请包上 flag{} 提交&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;题目中提到了&lt;strong&gt;看不到图&lt;/strong&gt;以及&lt;strong&gt;屏幕太小了&lt;/strong&gt;,再加上题目给了一张 png 图片，由此可以猜到这题修改了图片的长或宽，让设备只能显示图片的一部分，从而隐藏了 flag&lt;br&gt;
使用脚本&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import zlib
import struct

filename = &amp;#39;2.png&amp;#39;
with open(filename, &amp;#39;rb&amp;#39;) as f:
    all_b = f.read()
    crc32key = int(all_b[29:33].hex(), 16)
    data = bytearray(all_b[12:29])
    n = 4095  # 理论上0xffffffff,但考虑到屏幕实际/cpu，0x0fff就差不多了
    for w in range(n):  # 高和宽一起爆破
        width = bytearray(struct.pack(&amp;#39;&amp;gt;i&amp;#39;, w))  # q为8字节，i为4字节，h为2字节
        for h in range(n):
            height = bytearray(struct.pack(&amp;#39;&amp;gt;i&amp;#39;, h))
            for x in range(4):
                data[x + 4] = width[x]
                data[x + 8] = height[x]
            crc32result = zlib.crc32(data)
            if crc32result == crc32key:
                # 2021.7.20，有时候显示的宽高依然看不出具体的值，干脆输出data部分
                print(data.hex())
                print(&amp;#34;宽为：&amp;#34;, end=&amp;#34;&amp;#34;)
                print(width)
                print(&amp;#34;高为：&amp;#34;, end=&amp;#34;&amp;#34;)
                print(height)
                exit(0)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以一键得出图片正确的长和宽，将图片信息修改为正确的长和宽即可看到 flag&lt;br&gt;
&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%E5%A4%A7%E7%99%BD1/img1.png&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt;
&lt;p&gt;可得 flag 为 &lt;strong&gt;flag{He1l0_d4_ba1}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;之前用的脚本咋找不到了呢&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;脚本来源 &lt;a href=&#34;https://www.cnblogs.com/yunqian2017/p/14449346.html&#34;&gt;png图片CRC爆破原理的学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E5%A4%A7%E7%99%BD/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF Alice与Bob</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-alice%E4%B8%8Ebob/</link>
        <pubDate>Fri, 13 Jan 2023 02:05:24 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-alice%E4%B8%8Ebob/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-alice%E4%B8%8Ebob/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#Alice%E4%B8%8EBob&#34;&gt;https://buuoj.cn/challenges#Alice%E4%B8%8EBob&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;密码学历史中，有两位知名的杰出人物，Alice和Bob。他们的爱情经过置换和轮加密也难以混淆，即使是没有身份认证也可以知根知底。就像在数学王国中的素数一样，孤傲又热情。下面是一个大整数:98554799767,请分解为两个素数，分解后，小的放前面，大的放后面，合成一个新的数字，进行md5的32位小写哈希，提交答案。 注意：得到的 flag 请包上 flag{} 提交&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;去掉阅读短文似的没用的信息，即先分解质因数，再求md5即可&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;a href=&#34;https://zh.numberempire.com/numberfactorizer.php&#34;&gt;整数分解工具&lt;/a&gt; 将 98554799767 分解为 101999 和 966233&lt;/li&gt;
&lt;li&gt;求 101999966233 的 md5 结果，为 d450209323a847c8d01c6be47c81811a&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可得 flag 为 &lt;strong&gt;flag{d450209323a847c8d01c6be47c81811a}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-alice%E4%B8%8Ebob/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 丢失的MD5</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E4%B8%A2%E5%A4%B1%E7%9A%84md5/</link>
        <pubDate>Fri, 13 Jan 2023 00:32:23 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E4%B8%A2%E5%A4%B1%E7%9A%84md5/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E4%B8%A2%E5%A4%B1%E7%9A%84md5/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E4%B8%A2%E5%A4%B1%E7%9A%84MD5&#34;&gt;https://buuoj.cn/challenges#%E4%B8%A2%E5%A4%B1%E7%9A%84MD5&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import hashlib   
for i in range(32,127):
    for j in range(32,127):
        for k in range(32,127):
            m=hashlib.md5()
            m.update(&amp;#39;TASC&amp;#39;+chr(i)+&amp;#39;O3RJMV&amp;#39;+chr(j)+&amp;#39;WDJKX&amp;#39;+chr(k)+&amp;#39;ZM&amp;#39;)
            des=m.hexdigest()
            if &amp;#39;e9032&amp;#39; in des and &amp;#39;da&amp;#39; in des and &amp;#39;911513&amp;#39; in des:
                print des
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;遇到 python 题目，当然是要先运行一下啦&lt;br&gt;
报错&lt;br&gt;
仔细研究后发现这 TM 居然是 python2 的题目&amp;hellip;&lt;br&gt;
只要装上 python2 环境，运行一下，可以得到一串字符串，包上 &lt;strong&gt;flag{}&lt;/strong&gt; 即可&lt;br&gt;
所以 flag 就为 &lt;strong&gt;flag{e9032994dabac08080091151380478a2}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;结果这题的大部分时间都用在了装 python2 环境上了&amp;hellip;&lt;/em&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E4%B8%A2%E5%A4%B1%E7%9A%84md5/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF 篱笆墙的影子</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90/</link>
        <pubDate>Fri, 13 Jan 2023 00:09:44 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90&#34;&gt;https://buuoj.cn/challenges#%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;felhaagv{ewtehtehfilnakgw}&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;题目提到了篱笆墙，这篱笆不就是栅栏嘛&lt;br&gt;
尝试一下栅栏密码，成功&lt;br&gt;
每两个为一组&lt;br&gt;
可得 flag 为 &lt;strong&gt;flag{wethinkwehavetheflag}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;做到一半发现 ubuntu 的 python 环境炸了&amp;hellip;头秃&lt;/em&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E7%AF%B1%E7%AC%86%E5%A2%99%E7%9A%84%E5%BD%B1%E5%AD%90/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF [极客大挑战2019]Http</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019http/</link>
        <pubDate>Thu, 12 Jan 2023 01:05:28 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019http/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019http/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DHttp&#34;&gt;https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Http&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;一个网站&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;题目给了一个网站，在网页源码里可以找到一句&lt;br&gt;
&lt;strong&gt;&amp;lt;a style=&amp;ldquo;border:none;cursor:default;&amp;rdquo; onclick=&amp;ldquo;return false&amp;rdquo; href=&amp;ldquo;Secret.php&amp;rdquo;&amp;gt;&lt;/strong&gt;&lt;br&gt;
可以猜到题目和 Secret.php 有关&lt;br&gt;
打开后即可按照题目提示分别加上三个请求头:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Referer:https://Sycsecret.buuoj.cn&lt;/li&gt;
&lt;li&gt;User-Agent:Syclover&lt;/li&gt;
&lt;li&gt;X-Forwarded-For:127.0.0.1&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    import httpx
    url = &amp;#39;http://node4.buuoj.cn:27094/Secret.php&amp;#39;
    headers = {&amp;#34;Referer&amp;#34;:&amp;#34;https://Sycsecret.buuoj.cn&amp;#34;,&amp;#34;User-Agent&amp;#34;:&amp;#34;Syclover&amp;#34;,&amp;#34;X-Forwarded-For&amp;#34;:&amp;#34;127.0.0.1&amp;#34;}
    r = httpx.get(url,headers=headers)
    print(r.text)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可得 flag 为 &lt;strong&gt;flag{10b601e9-9ce4-4abc-b69d-32123353d17e}&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;见了鬼了，用 Postman 死活不行&amp;hellip;&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019%5DHttp1/img1.png&#34; alt=&#34;不好使的Postman&#34;&gt;还得是 Python&lt;/em&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019http/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF [极客大挑战2019]Knife</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019knife/</link>
        <pubDate>Thu, 12 Jan 2023 00:38:56 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019knife/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019knife/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DKnife&#34;&gt;https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Knife&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;打开靶机，给了两句话&lt;br&gt;
&lt;strong&gt;我家菜刀丢了，你能帮我找一下么&lt;br&gt;
eval($_POST[&amp;ldquo;Syc&amp;rdquo;]);&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;题目提到了&lt;strong&gt;菜刀&lt;/strong&gt;,所以选择&lt;strong&gt;蚁剑&lt;/strong&gt;（主要是电脑上没有菜刀2333）&lt;br&gt;
很简单，一步到位&lt;br&gt;
&lt;img src=&#34;https://blog.lty520.ml/img/CTF/WP-BUUCTF-%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019%5DKnife1/img1.png&#34; alt=&#34;蚁剑&#34;&gt;&lt;br&gt;
在网站根目录下可以找到名为 flag 的文件，可得 flag 为 &lt;strong&gt;flag{20d3c2b8-71fa-41fa-a8f6-fc7bcd5f8137}&lt;/strong&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019knife/ - </description>
        </item>
    
    
    
        <item>
        <title>WP BUUCTF Quoted Printable1</title>
        <link>https://blog.lty520.ml/ctf/wp-buuctf-quoted-printable1/</link>
        <pubDate>Thu, 12 Jan 2023 00:03:27 +0800</pubDate>
        
        <guid>https://blog.lty520.ml/ctf/wp-buuctf-quoted-printable1/</guid>
        <description>Ling的博客 https://blog.lty520.ml/ctf/wp-buuctf-quoted-printable1/ -&lt;p&gt;题目链接: &lt;a href=&#34;https://buuoj.cn/challenges#Quoted-printable&#34;&gt;https://buuoj.cn/challenges#Quoted-printable&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目&#34;&gt;题目&lt;/h1&gt;
&lt;p&gt;=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6&lt;/p&gt;
&lt;h1 id=&#34;思路&#34;&gt;思路&lt;/h1&gt;
&lt;p&gt;没啥思路，尝试了一下，并不是16进制&lt;br&gt;
尝试扔到 CyberChef 里，居然解出来了&lt;br&gt;
flag 为 &lt;strong&gt;flag{那你也很棒哦}&lt;/strong&gt;&lt;br&gt;
查了一下，这东西叫 Quoted-printable ，可译为&lt;strong&gt;可打印字符引用编码&lt;/strong&gt;或&lt;strong&gt;使用可打印字符的编码&lt;/strong&gt;&lt;br&gt;
将8-bit字节值可编码为3个字符：一个等号“=”后跟随两个十六进制数字（0–9或A–F）表示该字节的数值。
&lt;em&gt;所以还是16进制&amp;hellip;这点并没有猜错 2333&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Quoted-printable&#34;&gt;Quoted-printable 维基百科&lt;/a&gt;&lt;/p&gt;
- https://blog.lty520.ml/ctf/wp-buuctf-quoted-printable1/ - </description>
        </item>
    
    
  </channel>
</rss> 